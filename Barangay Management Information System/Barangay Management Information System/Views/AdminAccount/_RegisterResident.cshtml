@model Barangay_Management_Information_System.Models.RegisterViewModel

@{
    ViewBag.Title = "_RegisterResident";
    Layout = "~/Views/Shared/_BasicLayout.cshtml";


    List<SelectListItem> dropRoles = new List<SelectListItem>();

    foreach (var role in TempData["Roles"] as List<Barangay_Management_Information_System.Models.Entity.AspNetRole>)
    {

        dropRoles.Add(new SelectListItem
        {
            Text = role.Name,
            Value = role.Id
        });

    }
}

<style>
    .form-control {
        color: #003f30;
        letter-spacing: 2px;
    }

        .form-control:focus {
            border-color: #28a745;
            box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
        }
</style>


@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal mt-3">

        @if(TempData["alert-type"] != null)
        {
            <div class="alert @TempData["alert-type"] alert-dismissible mb-3">
                <button type="button" class="close" data-dismiss="alert">&times;</button>
                <strong>@TempData["alert-header"]!</strong> @TempData["alert-msg"]
            </div>
        }    

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.ResidentId)

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.DropDownListFor(model => model.RoleId, dropRoles, "Select a role...", new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-12">
                <input type="submit" value="Create" class="mb-3 btn btn-success float-right" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
